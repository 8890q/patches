From 81b2c7836d69055ce5110d4f305d0d1bae6d2044 Mon Sep 17 00:00:00 2001
From: ivanmeler <i_ivan@windowslive.com>
Date: Wed, 9 Nov 2022 08:04:33 +0000
Subject: [PATCH] Add support for non bpf usecase

Change-Id: I722769b365984944fc5df6f8717cd3671ec9836c
---
 server/Controllers.cpp | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/server/Controllers.cpp b/server/Controllers.cpp
index 00ee186d..60bc0081 100644
--- a/server/Controllers.cpp
+++ b/server/Controllers.cpp
@@ -278,13 +278,6 @@ void Controllers::init() {
     Stopwatch s;
 
     if (int ret = bandwidthCtrl.enableBandwidthControl()) {
-        gLog.error("Failed to initialize BandwidthController (%s)", strerror(-ret));
-        // A failure to init almost definitely means that iptables failed to load
-        // our static ruleset, which then basically means network accounting will not work.
-        // As such simply exit netd.  This may crash loop the system, but by failing
-        // to bootup we will trigger rollback and thus this offers us protection against
-        // a mainline update breaking things.
-        exit(1);
     }
     gLog.info("Enabling bandwidth control: %" PRId64 "us", s.getTimeAndResetUs());
 
-- 
2.34.1

